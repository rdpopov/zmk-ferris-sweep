// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


#define BASE 0
#define NUM 1
#define SYM 2
#define BTT 3
#define POE 4
#define POE_ALT 5
#define GAME 6
#define GAME_ALT 7


adadasdsada

// #include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&sl {
    release-after-ms = <2000>;
};

&lt {
    tapping-term-ms = <200>;
};


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        tdl1: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYER_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl 1>, <&to 1>;
        };
        tdl2: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYER_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl 2>, <&to 2>;
        };
        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&to>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    /*                KEY POSITIONS

        ╭────────────────────╮ ╭────────────────────╮
        │  0   1   2   3   4 │ │  5   6   7   8   9 │
        │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
        │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
        ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
                    ╰────────╯ ╰────────╯            */

    combos {
        compatible = "zmk,combos";

       /* combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BACKSPACE>;
        }; */

        combo_layer {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q  &kp W  &kp E      &kp R                &kp T              &kp Y            &kp U                &kp I       &kp O    &kp P
                &kp A  &kp S  &ht LALT D &ht LGUI F           &kp G              &kp H            &ht RGUI J           &ht RALT K  &kp L    &kp SQT
                &kp Z  &kp X  &kp C      &kp V                &kp B              &kp N            &kp M                &kp COMMA   &kp DOT  &kp FSLH
                                         &lt NUM ESC          &ht RSHFT SPACE    &ht RCTRL ENTER  &lt SYM BKSP
            >;
        };

        // NUM
        left_layer {
            bindings = <
                &kp ESC    &kp N1  &kp N2  &kp N3  &sk RALT      &kp UNDERSCORE &kp LPAR  &kp RPAR  &kp PLUS  &kp DEL
                &kp TAB    &kp N4  &kp N5  &kp N6  &caps_word    &kp MINUS      &kp LBRC  &kp RBRC  &kp EQUAL &kp COLON
                &sk RSHFT  &kp N7  &kp N8  &kp N9  &kp N0        &kp PIPE       &kp LBKT  &kp RBKT  &kp BSLH  &kp SEMI
                                           &none   &trans        &trans         &sk RGUI
            >;
        };

        // SYM
        right_layer {
            bindings = <
                &trans  &kp EXCL    &kp AT       &kp HASH   &none       &kp HOME  &kp PG_DN  &kp PG_UP  &kp END     &kp BKSP
                &trans  &kp DOLLAR  &kp PERCENT  &kp CARET  &none       &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT   &sk RALT
                &trans  &kp AMPS    &kp STAR     &kp TILDE  &kp GRAVE   &none     &none      &none      &none       &to BTT
                                                 &sk RCTRL  &trans      &trans    &none
            >;
        };

        bt {
            bindings = <
                    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &bt BT_SEL 5     &kp F1    &kp F2     &kp F3  &kp F4    &to POE
                    &none        &none        &bt BT_PRV   &bt BT_NXT    &none            &kp F5    &kp F6     &kp F7  &kp F8    &to GAME
                    &none        &none        &none        &none         &none            &kp F9    &kp F10    &kp F11 &kp F12   &to BASE
                                                           &none         &bt BT_CLR       &trans &none
            >;
        };

        poe {
            bindings = <
                    &kp N1     &kp N2 &kp N3 &kp N4      &kp N5     &none    &none    &none &none   &none
                    &kp Q      &kp W  &kp E  &kp R       &kp T      &none    &none    &none &none   &none
                    &kp LCTRL  &none  &none  &kp I       &kp P      &none    &none    &none &none   &to BASE
                                             &mo POE_ALT &kp TAB    &none   &none
            >;
        };

        poe_alt {
            bindings = <
                    &kp ESC    &kp N2    &kp N3    &kp N4    &kp N5        &none    &none    &none &none   &none
                    &kp LC(Q)  &kp LC(W) &kp LC(E) &kp LC(R) &kp LC(T)     &none    &none    &none &none   &none
                    &kp LCTRL  &none     &none     &kp I     &kp P         &none    &none    &none &none   &to BASE
                                                   &none     &none         &none    &none
            >;
        };

        game {
            bindings = <
                    &kp ESC   &kp Q  &kp W  &kp E        &kp R            &none &none &none &none &none
                    &kp TAB   &kp A  &kp S  &kp D        &kp F            &none &none &none &none &none
                    &kp RSHFT &kp Z  &kp X  &kp C        &kp V            &none &none &none &none &to BASE
                                            &mo GAME_ALT &kp RCTRL        &none &none
            >;
        };

        game_alt {
            bindings = <
                    &kp ESC   &kp N1  &kp N2  &kp N3 &kp R            &none &none &none &none &none
                    &kp TAB   &kp N4  &kp N5  &kp N6 &kp ENTER        &none &none &none &none &none
                    &kp RSHFT &kp N7  &kp N8  &kp N9 &kp N0           &none &none &none &none &to BASE
                                              &none  &ht RCTRL SPACE  &none &none
            >;
        };
    };
};
